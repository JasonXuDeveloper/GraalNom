digraph {
  rankdir=TB;
  b0_l0 -> b0_cond
  b0_cond [label="reg[3] == reg[4]", shape=diamond]
  b0_cond -> b1_l0 [label="true"]
  b0_cond -> b2_l0 [label="false"]
  b0_l0 [label="reg[2] = reg[1].First\nreg[3] = reg[2] % reg[0]\nreg[4] = 0\n", shape=box]
  subgraph cluster_b0 {
    label = "blk0";
    b0_l0;
    b0_cond;
  }
  b1_l0 -> b1_ret
  b1_l0 [label="reg[6] = reg[1].Rest\n", shape=box]
  b1_ret [label="return SieveTest_0.Sift(reg[0], IFun_1.(reg[6]))"]
  subgraph cluster_b1 {
    label = "blk1";
    b1_l0;
    b1_ret;
  }
  b2_l0 [label="return _Constructor_Stream_0_2(new Stream_0(), reg[2], _Constructor_SiftFun_0_2(new SiftFun_0(), reg[0], reg[1]))"]
  subgraph cluster_b2 {
    label = "blk2";
    b2_l0;
  }
  labelloc="t"
  label="SieveTest_0.Sift"
}